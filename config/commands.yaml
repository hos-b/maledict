# add commands
add:
  account:
    args: {'name': 'str', 'initial_balance': 'float', 'currency': 'str'}
    desc: 'add an account with a supported currency and an initial balance'
    task-id: 101
  expense:
    args: {}
    desc: 'enter expense mode'
    task-id: 102

# list commands
list:
  accounts:
    args: {}
    desc: 'list all the accounts'
    task-id: 201

# set commands
set:
  account:
    args: {'name': 'str'}
    desc: 'set the current account'
    task-id: 301

# parse commands
parse:
  mkcsv:
    args: {'file_path': 'str', 'translate_categories': 'bool', 'currency': 'str'}
    desc: 'parse a .csv file & add its records to the current account'
    task-id: 401
  maledict:
    args: {'file_path': 'str', 'translate_categories': 'bool', 'currency': 'str'}
    desc: 'parse a .csv file & add its records to the current account'
    task-id: 402

# delete commands 
delete:
  account:
    args: {'name': 'str'}
    desc: 'delete the account'
    task-id: 501
  expense:
    args: {'transaction-id': 'int'}
    desc: 'delete a transaction given its hex transaction id'
    task-id: 502

# show commands
show:
  all:
    args: {}
    desc: 'show all expenses'
    task-id: 601
    sql-query: "SELECT * FROM {} ORDER BY datetime(datetime) DESC;"
  monthly:
    args: {'month.year': 'str'}
    desc: 'show monthly expenses'
    task-id: 602
    sql-query: "SELECT * FROM {} WHERE date(substr(datetime, 1, 10)) >= '{}' AND date(substr(datetime, 1, 10)) <= '{}' ORDER BY datetime(datetime) DESC;"
  yearly:
    args: {'year': 'int'}
    desc: 'show yearly expenses'
    task-id: 603
    sql-query: "SELECT * FROM {} WHERE date(substr(datetime, 1, 10)) >= '{}' AND date(substr(datetime, 1, 10)) <= '{}' ORDER BY datetime(datetime) DESC;"
  between:
    args: {'start_date': 'str', 'end_date': 'str'}
    desc: "show expenses between two dates. 'now' is a valid date"
    task-id: 604
    sql-query: "SELECT * FROM {} WHERE date(substr(datetime, 1, 10)) >= '{}' AND date(substr(datetime, 1, 10)) <= '{}' ORDER BY datetime(datetime) DESC;"
  last:
    week:
      args: {}
      desc: 'show expenses from last week'
      task-id: 605
      sql-query: "SELECT * FROM {} WHERE datetime BETWEEN datetime('now', '-6 days') AND datetime('now', 'localtime') ORDER BY datetime(datetime) DESC;"
    month:
      args: {}
      desc: 'show expenses from last month'
      task-id: 606
      sql-query: "SELECT * FROM {} WHERE datetime BETWEEN datetime('now', 'start of month') AND datetime('now', 'localtime') ORDER BY datetime(datetime) DESC;"
    year:
      args: {}
      desc: 'show expenses from last year'
      task-id: 607
      sql-query: "SELECT * FROM {} WHERE datetime BETWEEN datetime('now', 'start of year') AND datetime('now', 'localtime') ORDER BY datetime(datetime) DESC;"

# export commands
export:
  csv:
    args: {'file_path': 'str'}
    desc: 'export expenses from the current account'
    task-id: 701

# edit commands
edit:
  expense:
    args: {'transaction-id': 'int'}
    desc: 'edit a transaction given its hex transaction id'
    task-id: 801

# query commands
query:
  args: {}
  desc: 'enter query mode'
  task-id: 901

### terminal specific tasks:
# exit
exit:
  args: {}
  desc: 'exit the program'
  task-id: 100001

# clear
clear:
  args: {}
  desc: 'clear the terminal'
  task-id: 100002
